Some time ago I was thinking about starlink and somehow, I started thinking of creating a wireless communication system. I had not done any research but I only had a rough idea of what I wanted to do. I wanted to use my arduino microcontrollers to wirelessly communicate with each other using a laser pointer and an ldr. My plan is to use the laser's two modes, (on/off) to represent bits 1 and 0. Through this all I have to do is to tell the other arduino to read this and change certain bits in certain positions to match the inputted data, sounds really straightforward…


So here is what I did, there are two modules for this, the binary emitter, which I just call the “binemitter” for short, which converts the user's input into a 7-bit binary string that the laser pointer will use to turn on/off and the second module which is called the “binreader”, that reads the state of the laser pointer and interprets it to binary and then a character. And just like that we are able to transfer data through light.


The main reason why this method of communication works is that every character the user wants to input starts with a 1 (with reference to ascii), and so there is no need to set a “specific” start bit, neither is an “actual” stop bit needed since it stops reading after the 7th bit and moves onto recording for the next character. 


Now unfortunately, the system is too slow. It can only read a character per second, if any faster, it prints jargon and it cant read too many characters because over time, the time inaccuracy accumulates, causing the two modules to read and write completely different things….


And so, I decided to do some research. Apparently the method of data transmission I used is called “Asynchronous serial communication”  in which the communication endpoints’ interfaces are not continuously synchronized by a common clock signal. The number of disadvantages I read was scary and I was facing all of them.


* Start and Stop Bit Over heading.
* Noise in the signal may lead to False recognition of Start and Stop bits.
* Response time cannot be predicted.
* Handling of errors is more intricate.
* Applications are comparatively hard to design for such transmissions.


*Asynchronous serial communication is a form of serial communication in which the communicating endpoints' interfaces are not continuously synchronized by a common clock signal.*